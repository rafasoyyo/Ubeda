extends layout

block head
    style.
        #map {
            width: 100%;
            height: calc(100vh - 250px);
        }

        #placeInfo {
            width: calc(100vw - 20px);
            height: calc(100vh - 20px);
            top: 10px;
            left: 10px;
            margin: 0;
            padding: 0;
            z-index: 10;
            position: fixed;
            background-color: white;
            box-shadow: 0 0 10px 1px grey;
            overflow: scroll;
            color: #607D8B;
        }

        #placeInfo .close {
            position: absolute;
            top: 0;
            right: 0;
            margin: 15px 20px;
            font-size: 20px;
        }

        #placeInfo a {
            //- padding: 0 10px;
            text-decoration: none;
        }

        #placeInfo > div > div{
            margin-bottom: 10px;
        }

        #placeInfo button {
            padding: 4px 15px;
            color: #607D8B;
            border: 1px solid #607D8B;
            font-size: 11px;
            min-width: 48%;
            max-width: 98%;
            margin: 1%;
            background-color: white;
        }

        #placeInfo span,
        #placeInfo i {
            padding: 0 3px;
            font-size: 13px;
            color: #607D8B;
        }

        #placeInfo .images {
            overflow: scroll;
            margin: 15px;
        }

        #placeInfo .image {
            width: 75vw;
            display: inline;
            vertical-align: middle;
            height: initial;
            margin-right: 10px;
        }

        #places {
            padding: 10px;
            height: 185px;
            width: calc(100vw - 20px);
            overflow: scroll;
        }

        #places .scroll-places {
            height: inherit;
        }

        .place {
            margin-right: 10px;
            width: 61vw;
            height: 100%;
            display: inline-block;
            box-shadow: 1px 1px 5px -1px black;
            padding: 5px;
            box-sizing: border-box;
            vertical-align: top;
        }

        .place-box{
            height: 35%;
        }

        .place-box h3 {
            font-size: 15px;
            font-weight: bold;
            text-overflow: ellipsis;
            white-space: nowrap;
            overflow: auto;
        }

        .place-box em,
        .place-box i {
            font-size: 11px;
        }

        .place-box button {
            border: 1px;
            padding: 4px 15px;
            color: white;
            background-color: #607D8B;
            font-size: 11px;
        }

        .place-background {
            height: 65%;
            margin: -5px  -5px 5px -5px;
        }

block content
    header#header
        a(href="/")
            i.fas.fa-chevron-left(style="position: absolute; top: 0; left: 0; margin: 15px")
        h1.unmar= title
        i.fas.fa-map-marker-alt(style="position: absolute; top: 0; right: 0; margin: 15px" onclick="gps()")

    main
        #map

        #placeInfo(style="display: none")
            .close.fa.fa-times()
            div(style="text-center; padding: 10px 20px")
                div
                    h1.name
                div
                    a.info(style="line-height: 20px;" target="_bank")
                button
                    a.phone(target="_bank")
                        i.fa.fa-phone
                        span
                button
                    a.web(target="_bank")
                        i.fa.fa-link
                        span Web
                button
                    a.unmar.address(target="_bank")
                        i.fas.fa-map-marked-alt
                        span
            div.images
                .scroll-images

        #places
            .scroll-places
                for place in places
                    .place(data-identifier="#{place.identifier}" data-info="#{place.info}")
                        .place-background.background
                        .place-box
                            h3.unmar.bold= place.name
                            em.unmar= place.tipo
                            span(style="padding:0 4px") ·
                            em.rating
                            i.fa.fa-star(style="padding-left: 2px")
                            if place.recomendacion
                                span(style="padding:0 4px") ·
                                em= place.recomendacion
                            div(style=" text-align: center; ")
                                button(onclick="placeDetails(this)" style=" border: 1px solid grey; margin: 5px;") More Info

block scripts
    script(src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDOUok9C5sAw7TY0Uvba7Bn63YoTJjt0CU&libraries=places&callback=initMap" async defer)
    //- script(src="https://maps.googleapis.com/maps/api/js?libraries=places&callback=initMap" async defer)

    script.

        var map, geolocation, isLocated, myMarker, myAccuracy;
        var placeService, placeMarker, placesInfo = {};
        var $places, $placeInfo;

        //- Iniciar mapa y su configuración
        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: new google.maps.LatLng( 38.008700, -3.369500),
                disableDefaultUI: true,
                zoom: 16,
                mapTypeControlOptions: {
                    mapTypeIds: ['styled_map']
                }
            });
            //Associate the styled map with the MapTypeId and set it to display.
            map.mapTypes.set('styled_map', new google.maps.StyledMapType([
                {
                    "featureType": "poi",
                    "elementType": "labels.text",
                    "stylers": [
                    {
                        "visibility": "off"
                    }
                    ]
                },
                {
                    "featureType": "poi.business",
                    "stylers": [
                    {
                        "visibility": "off"
                    }
                    ]
                },
                {
                    "featureType": "road",
                    "elementType": "labels.icon",
                    "stylers": [
                    {
                        "visibility": "off"
                    }
                    ]
                },
                {
                    "featureType": "transit",
                    "stylers": [
                    {
                        "visibility": "off"
                    }
                    ]
                }
            ]));
            map.setMapTypeId('styled_map');

            placeService = new google.maps.places.PlacesService(map);
            findPlace(0);
        }



        //- Buscar datos de lugares
        function findPlace(i) {

            var p = $('.place')[i];
            if(!p) { return false; }

            var that = $(p);
            var data = that.data();

            //- Buscar lugar
            placeService.findPlaceFromQuery({
                query: data.identifier,
                fields: ['place_id', 'photo', 'name', 'rating', 'opening_hours', 'geometry', 'icon']
            }, function(res, status) {
                if (status == google.maps.places.PlacesServiceStatus.OK) {
                    res = res[0];
                    var placeId = res.place_id;
                    placeMarker = new google.maps.Marker({
                        'icon': {
                            'url': res.icon,
                            'scaledSize': new google.maps.Size(25, 25),
                        },
                        'position': {
                            lat: res.geometry.location.lat(),
                            lng: res.geometry.location.lng()
                        },
                        'map': map
                    });
                    placeMarker.place_id = placeId;
                    placeMarker.addListener('click', function() {
                        placeFocus(this.place_id);
                    });

                    placesInfo[placeId] = res;
                    placesInfo[placeId].marker = placeMarker;

                    that.attr('id', placeId);
                    that.data('placeid', placeId);
                    that.find('.rating').text(res.rating);
                    if (res.photos && res.photos.length) {
                        that.children('.place-background').css({ 'background-image': 'url(' + res.photos[0].getUrl() + ')' });
                    }
                    that.click(function(){
                        placeFocus(data.placeid);
                    });
                    findPlace(++i);
                } else {
                    console.log('getDetails: ', data.identifier, status)
                    setTimeout(function(){
                        findPlace(i);
                    }, 1000);
                }
            });
        }


        function placeDetails (t){
            var data = $(t).closest('.place').data();
            placeService.getDetails({
                placeId: data.placeid,
                fields: ['place_id', 'website', 'formatted_phone_number', 'photos', 'formatted_address', 'name']
            }, function(res, status) {
                console.log(status, res, data)
                if (status == google.maps.places.PlacesServiceStatus.OK) {
                    var images = '';
                    (res.photos).forEach(function(img){
                        images += '<img class="image" src=" ' + img.getUrl() + ' "></img>';
                    });

                    $placeInfo.find('.scroll-images').width( (($(window).width() * 0.75) + 11) * res.photos.length );

                    $placeInfo
                        .find('.scroll-images')
                            .html(images)
                        .end()
                        .find('.info')
                            .text( (data.info && data.info.length && data.info !== 'undefined') ? data.info : '' )
                        .end()
                        .find('.name')
                            .text(res.name)
                        .end()
                        .find('.phone')
                            .attr('href', 'tel: ' + res.formatted_phone_number)
                            .find('span')
                                .text(res.formatted_phone_number)
                            .end()
                        .end()
                        .find('.web')
                            .attr('href', res.website)
                            //- .find('span')
                            //-     .text('Enlace')
                            //- .end()
                        .end()
                        .find('.address')
                            .attr('href', "http://maps.google.com/?q=" + res.name + ' ' + res.formatted_address)
                            .find('span')
                                .text(res.formatted_address)

                    $placeInfo.show()
                }
            });
        }


        function placeFocus(placeid){
            var icon;
            //- Set original state to all markers
            Object.keys(placesInfo).forEach(function(item){
                icon = placesInfo[item].marker.getIcon();
                placesInfo[item].marker.setIcon({
                    'url': icon.url,
                    'scaledSize': new google.maps.Size(25, 25)
                });
                placesInfo[item].marker.setZIndex(1);
            });

            var place = placesInfo[placeid];
            var item = $places.find('#' + placeid);
            if (item) {
                $places.animate({ scrollLeft: $places.scrollLeft() + item.offset().left - 15 }, 500);
            }
            map.panTo({
                lat: place.geometry.location.lat(),
                lng: place.geometry.location.lng()
            });
            icon = place.marker.getIcon();
            place.marker.setIcon({
                'url': icon.url,
                'scaledSize': new google.maps.Size(50, 50)
            })
            place.marker.setZIndex(10);
        }


        function gps(){
            if(geolocation) {
                navigator.geolocation.clearWatch(geolocation);
                myMarker.setMap(null);
                myAccuracy.setMap(null);
                isLocated = false;
            }
            geolocation = navigator.geolocation.watchPosition(function(position){
                var myPos = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                if (!isLocated) {
                    map.panTo(myPos);
                    myMarker = new google.maps.Marker({
                        'icon': {
                            'path': google.maps.SymbolPath.CIRCLE,
                            'fillColor': '#4285F4',
                            'fillOpacity': 1,
                            'scale': 6,
                            'strokeColor': 'white',
                            'strokeWeight': 2,
                        },
                        'position': myPos,
                        'map': map
                    });

                    myAccuracy = new google.maps.Circle({
                        'strokeColor': '#4285F4',
                        'strokeWeight': 2,
                        'fillColor': '#4285F4',
                        'fillOpacity': 0.3,
                        'map': map,
                        'radius': position.coords.accuracy,
                        'center': myPos,
                    });
                    isLocated = true;
                } else {
                    myAccuracy.setCenter(myPos);
                    myMarker.setPosition(myPos);
                }
            }, function(err){
                alert( err.code + ' ' + err.message );
            }, { timeout: 30000 });
        }


        $('document').ready(function(){
            //- Scroll Sizing depending on number of elements
            var w60 = $(window).width() * 0.61;
            $places = $('#places')
            $places.find('.scroll-places').width( ($('.place').length * (w60 + 10)) + 20 );

            $placeInfo = $('#placeInfo');
            $placeInfo.find('.close').click(function(){
                $placeInfo.hide();
            })
        });

